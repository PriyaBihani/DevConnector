{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/layout/spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","console","log","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","Login","login","useState","email","password","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","prototype","PropTypes","func","isRequired","bool","config","body","JSON","stringify","post","errors","response","forEach","error","register","password2","alerts","alert","length","map","key","style","width","margin","display","alt","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Component","component","rest","render","props","ProfileItem","avatar","location","skills","src","slice","skill","index","getProfiles","profiles","ProfileTop","website","social","rel","twitter","facebook","linkedin","youtube","instagram","object","ProfileAbout","bio","trim","split","ProfileExperience","current","description","ProfileEducation","fieldofstudy","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","githubusername","withRouter","displaySocialInputs","toggleSocialInput","join","addExperience","put","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","class","defaultProps","postId","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","getPost","initialState","combineReducers","action","filter","undefined","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Fragment","exact","path","Landing","Register","Profiles","Profile","Dashboard","export","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","hydrate","document","getElementById"],"mappings":"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","file":"static/js/main.2900cec6.chunk.js","sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport uuid from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n   if (token) {\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n   } else {\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n   }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n   REGISTER_SUCCESS,\r\n   REGISTER_FAIL,\r\n   USER_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   CLEAR_PROFILE,\r\n} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n   if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n   }\r\n\r\n   console.log('SETTING');\r\n\r\n   try {\r\n      const res = await axios.get('/api/auth');\r\n      console.log(res);\r\n      dispatch({\r\n         type: USER_LOADED,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: AUTH_ERROR,\r\n      });\r\n   }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n      },\r\n   };\r\n\r\n   const body = JSON.stringify({ name, email, password });\r\n\r\n   try {\r\n      const res = await axios.post('/api/users', body, config);\r\n      console.log(res);\r\n      console.log(res.data);\r\n      dispatch({\r\n         type: REGISTER_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n         type: REGISTER_FAIL,\r\n      });\r\n   }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n      },\r\n   };\r\n\r\n   const body = JSON.stringify({ email, password });\r\n\r\n   try {\r\n      const res = await axios.post('/api/auth', body, config);\r\n\r\n      dispatch({\r\n         type: LOGIN_SUCCESS,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n         type: LOGIN_FAIL,\r\n      });\r\n   }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n   dispatch({ type: CLEAR_PROFILE });\r\n   dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nexport const Navbar = ({ logout, auth: { isAuthenticated, loading } }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/Profiles'> Developers </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'> Posts </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user'></i>{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#/'>\r\n          <i className='fas fa-sign-out-alt'></i>{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/Profiles'> Developers </Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading ? (\r\n        <Fragment> {isAuthenticated ? authLinks : guestLinks} </Fragment>\r\n      ) : null}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign into Your account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.prototype = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            minLength='6'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from 'react';\r\n// import spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading....'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n   GET_PROFILE,\r\n   PROFILE_ERROR,\r\n   UPDATE_PROFILE,\r\n   CLEAR_PROFILE,\r\n   ACCOUNT_DELETED,\r\n   GET_PROFILES,\r\n   GET_REPOS,\r\n} from './types';\r\n\r\n// Get the current users profiles\r\n// How the hell we didn't pass the jwt token\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n   try {\r\n      const res = await axios.get('/api/profile/me');\r\n\r\n      dispatch({\r\n         type: GET_PROFILE,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      console.log(err);\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.statusText, status: err.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n   dispatch({ type: CLEAR_PROFILE });\r\n   try {\r\n      const res = await axios.get('/api/profile');\r\n\r\n      dispatch({\r\n         type: GET_PROFILES,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.statusText, status: err.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Get all profile by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n      dispatch({\r\n         type: GET_PROFILE,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Get Github Repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.get(`/api/profile/${username}`);\r\n\r\n      dispatch({\r\n         type: GET_REPOS,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Create or update a profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n   dispatch\r\n) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      };\r\n\r\n      const res = await axios.post('/api/profile', formData, config);\r\n\r\n      dispatch({\r\n         type: GET_PROFILE,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n         setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n      );\r\n\r\n      if (!edit) {\r\n         history.push('/dashboard');\r\n      }\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      };\r\n\r\n      const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n      dispatch({\r\n         type: UPDATE_PROFILE,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Experience Added', 'success'));\r\n\r\n      history.push('/dashboard');\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      };\r\n\r\n      const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n      dispatch({\r\n         type: UPDATE_PROFILE,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Education Added', 'success'));\r\n\r\n      history.push('/dashboard');\r\n   } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n         errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.delete(`api/profile/experience/${id}`);\r\n\r\n      dispatch({\r\n         type: UPDATE_PROFILE,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Experience Removed', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.delete(`api/profile/education/${id}`);\r\n\r\n      dispatch({\r\n         type: UPDATE_PROFILE,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Education Removed', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: PROFILE_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Delete Account & Profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n   if (window.confirm('Are you sure? This can not be undone!')) {\r\n      try {\r\n         await axios.delete(`api/profile`);\r\n\r\n         dispatch({ type: CLEAR_PROFILE });\r\n         dispatch({ type: ACCOUNT_DELETED });\r\n\r\n         dispatch(setAlert('Your account has been permanantly deleted'));\r\n      } catch (err) {\r\n         dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {\r\n               msg: err.response.statusText,\r\n               status: err.response.status,\r\n            },\r\n         });\r\n      }\r\n   }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        {<Moment format='YYYY/MM/DD'>{exp.from}</Moment>} -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className='btn btn-danger'\r\n          onClick={() => deleteExperience(exp._id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        {<Moment format='YYYY/MM/DD'>{edu.from}</Moment>} -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          className='btn btn-danger'\r\n          onClick={() => deleteEducation(edu._id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  profile: { profile, loading },\r\n  auth: { user },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={deleteAccount}>\r\n              <i className='fas fa-user-minus'></i> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet set up a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n   profile: {\r\n      user: { _id, name, avatar },\r\n      status,\r\n      company,\r\n      location,\r\n      skills,\r\n   },\r\n}) => {\r\n   return (\r\n      <div className='profile bg-light'>\r\n         <img src={avatar} alt='' className='round-img' />\r\n         <div>\r\n            <h2>{name}</h2>\r\n            <p>\r\n               {status}\r\n               {company && <span> at {company}</span>}\r\n            </p>\r\n            <p className='my-1'>{location && <span>{location}</span>}</p>\r\n            <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n               View Profile\r\n            </Link>\r\n         </div>\r\n         <ul>\r\n            {skills.slice(0, 4).map((skill, index) => (\r\n               <li key={index} className='text-primary'>\r\n                  <i className='fas fa-check'></i> {skill}\r\n               </li>\r\n            ))}\r\n         </ul>\r\n      </div>\r\n   );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n   profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport Spinner from '../layout/spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4> No profiles found.....</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span>at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.prototype = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line'></div>\r\n      </Fragment>\r\n    )}\r\n\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check'></i> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field of study : </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience.js';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n   getProfileById,\r\n   profile: { profile, loading },\r\n   auth,\r\n   match,\r\n}) => {\r\n   useEffect(() => {\r\n      getProfileById(match.params.id);\r\n   }, [getProfileById, match.params.id]);\r\n   return (\r\n      <Fragment>\r\n         {profile === null || loading ? (\r\n            <Spinner />\r\n         ) : (\r\n            <Fragment>\r\n               <Link to='/profiles' className='btn btn-light'>\r\n                  Back to profiles\r\n               </Link>\r\n               {auth.isAuthenticated &&\r\n                  auth.loading === false &&\r\n                  auth.user._id === profile.user._id && (\r\n                     <Link to='/edit-profile' className='btn btn-dark'>\r\n                        Edit Profile\r\n                     </Link>\r\n                  )}\r\n               <div className='profile-grid my-1'>\r\n                  <ProfileTop profile={profile} />\r\n                  <ProfileAbout profile={profile} />\r\n                  <div className='profile-exp bg-white p-2'>\r\n                     <h2 className='text-primary'>Experience</h2>\r\n                     {profile.experience.length > 0 ? (\r\n                        <Fragment>\r\n                           {profile.experience.map((experience) => (\r\n                              <ProfileExperience\r\n                                 key={experience._id}\r\n                                 experience={experience}\r\n                              />\r\n                           ))}\r\n                        </Fragment>\r\n                     ) : (\r\n                        <h4>No experience credentials</h4>\r\n                     )}\r\n                  </div>\r\n\r\n                  <div className='profile-edu bg-white p-2'>\r\n                     <h2 className='text-primary'>Education</h2>\r\n                     {profile.education.length > 0 ? (\r\n                        <Fragment>\r\n                           {profile.education.map((education) => (\r\n                              <ProfileEducation\r\n                                 key={education._id}\r\n                                 education={education}\r\n                              />\r\n                           ))}\r\n                        </Fragment>\r\n                     ) : (\r\n                        <h4>No education credentials</h4>\r\n                     )}\r\n                  </div>\r\n\r\n                  {profile.githubusername && (\r\n                     <ProfileGithub username={profile.githubusername} />\r\n                  )}\r\n               </div>\r\n            </Fragment>\r\n         )}\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nProfile.propTypes = {\r\n   getProfileById: PropTypes.func.isRequired,\r\n   profile: PropTypes.object.isRequired,\r\n   auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   profile: state.profile,\r\n   auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInput(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  history,\r\n  getCurrentProfile,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInput(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n   const [formData, setFormData] = useState({\r\n      company: '',\r\n      title: '',\r\n      location: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: '',\r\n   });\r\n\r\n   const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n   const {\r\n      company,\r\n      title,\r\n      location,\r\n      from,\r\n      to,\r\n      current,\r\n      description,\r\n   } = formData;\r\n\r\n   const onChange = (e) =>\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n   return (\r\n      <Fragment>\r\n         <h1 className=\"large text-primary\">Add An Experience</h1>\r\n         <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n            positions that you have had in the past\r\n         </p>\r\n         <small>* = required field</small>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               addExperience(formData, history);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"* Job Title\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={onChange}\r\n                  required\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"* Company\"\r\n                  name=\"company\"\r\n                  value={company}\r\n                  onChange={onChange}\r\n                  required\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"Location\"\r\n                  value={location}\r\n                  onChange={onChange}\r\n                  name=\"location\"\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <h4>From Date</h4>\r\n               <input\r\n                  type=\"date\"\r\n                  name=\"from\"\r\n                  value={from}\r\n                  onChange={onChange}\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <p>\r\n                  <input\r\n                     type=\"checkbox\"\r\n                     name=\"current\"\r\n                     value={current}\r\n                     checked={current}\r\n                     onChange={(e) => {\r\n                        setFormData({ ...formData, current: !current });\r\n                        toggleDisabled(!toDateDisabled);\r\n                     }}\r\n                  />{' '}\r\n                  Current Job\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <h4>To Date</h4>\r\n               <input\r\n                  type=\"date\"\r\n                  name=\"to\"\r\n                  value={to}\r\n                  onChange={onChange}\r\n                  disabled={toDateDisabled ? 'disabled' : ''}\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <textarea\r\n                  name=\"description\"\r\n                  cols=\"30\"\r\n                  rows=\"5\"\r\n                  placeholder=\"Job Description\"\r\n                  value={description}\r\n                  onChange={onChange}\r\n               ></textarea>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n               Go Back\r\n            </Link>\r\n         </form>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n   addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n   const [formData, setFormData] = useState({\r\n      school: '',\r\n      degree: '',\r\n      fieldofstudy: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: '',\r\n   });\r\n\r\n   const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n   const {\r\n      school,\r\n      degree,\r\n      fieldofstudy,\r\n      from,\r\n      to,\r\n      current,\r\n      description,\r\n   } = formData;\r\n\r\n   const onChange = (e) =>\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n   return (\r\n      <Fragment>\r\n         <h1 className=\"large text-primary\">Add Your Education</h1>\r\n         <p className=\"lead\">\r\n            <i className=\"fas fa-code-branch\"></i> Add any School or bootcamp\r\n            that you have attended\r\n         </p>\r\n         <small>* = required field</small>\r\n         <form\r\n            className=\"form\"\r\n            onSubmit={(e) => {\r\n               e.preventDefault();\r\n               addEducation(formData, history);\r\n            }}\r\n         >\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"* School or Bootcamp\"\r\n                  name=\"school\"\r\n                  value={school}\r\n                  onChange={onChange}\r\n                  required\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"* Degree or Certificate\"\r\n                  name=\"degree\"\r\n                  value={degree}\r\n                  onChange={onChange}\r\n                  required\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <input\r\n                  type=\"text\"\r\n                  placeholder=\"Feild of study\"\r\n                  value={fieldofstudy}\r\n                  onChange={onChange}\r\n                  name=\"fieldofstudy\"\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <h4>From Date</h4>\r\n               <input\r\n                  type=\"date\"\r\n                  name=\"from\"\r\n                  value={from}\r\n                  onChange={onChange}\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <p>\r\n                  <input\r\n                     type=\"checkbox\"\r\n                     name=\"current\"\r\n                     value={current}\r\n                     checked={current}\r\n                     onChange={(e) => {\r\n                        setFormData({ ...formData, current: !current });\r\n                        toggleDisabled(!toDateDisabled);\r\n                     }}\r\n                  />{' '}\r\n                  Current School\r\n               </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <h4>To Date</h4>\r\n               <input\r\n                  type=\"date\"\r\n                  name=\"to\"\r\n                  value={to}\r\n                  onChange={onChange}\r\n                  disabled={toDateDisabled ? 'disabled' : ''}\r\n               />\r\n            </div>\r\n            <div className=\"form-group\">\r\n               <textarea\r\n                  name=\"description\"\r\n                  cols=\"30\"\r\n                  rows=\"5\"\r\n                  placeholder=\"Programe Description\"\r\n                  value={description}\r\n                  onChange={onChange}\r\n               ></textarea>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n               Go Back\r\n            </Link>\r\n         </form>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n   addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-up'></i>{' '}\r\n            <span>{likes.length > 0 && <span> {likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => removeLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} class='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span class='comment-count'> {comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              type='button'\r\n              class='btn btn-danger'\r\n              onClick={(e) => deletePost(_id)}\r\n            >\r\n              <i class='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n   GET_POSTS,\r\n   GET_POST,\r\n   POST_ERROR,\r\n   UPDATE_LIKES,\r\n   DELETE_POST,\r\n   ADD_POST,\r\n   ADD_COMMENT,\r\n   REMOVE_COMMENT,\r\n} from './types';\r\n\r\n// Get Posts\r\nexport const getPosts = () => async (dispatch) => {\r\n   try {\r\n      const res = await axios.get('/api/posts');\r\n\r\n      dispatch({\r\n         type: GET_POSTS,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Add Like\r\nexport const addLike = (postId) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n      dispatch({\r\n         type: UPDATE_LIKES,\r\n         payload: { postId, likes: res.data },\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = (postId) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n      dispatch({\r\n         type: UPDATE_LIKES,\r\n         payload: { postId, likes: res.data },\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n   try {\r\n      await axios.delete(`/api/posts/${postId}`);\r\n\r\n      dispatch({\r\n         type: DELETE_POST,\r\n         payload: postId,\r\n      });\r\n\r\n      dispatch(setAlert('Post Removed', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      };\r\n      const res = await axios.post('/api/posts', formData, config);\r\n\r\n      dispatch({\r\n         type: ADD_POST,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Post Created', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Get Post\r\nexport const getPost = (id) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.get(`/api/posts/${id}`);\r\n\r\n      dispatch({\r\n         type: GET_POST,\r\n         payload: res.data,\r\n      });\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n   try {\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      };\r\n      const res = await axios.post(\r\n         `/api/posts/comment/${postId}`,\r\n         formData,\r\n         config\r\n      );\r\n\r\n      dispatch({\r\n         type: ADD_COMMENT,\r\n         payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert('Comment Added', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n   try {\r\n      const res = await axios.post(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n      dispatch({\r\n         type: REMOVE_COMMENT,\r\n         payload: commentId,\r\n      });\r\n\r\n      dispatch(setAlert('Comment Removed', 'success'));\r\n   } catch (err) {\r\n      dispatch({\r\n         type: POST_ERROR,\r\n         payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n   }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport PostItem from './PostItem';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostForm from './PostForm';\r\n\r\nconst Post = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Post);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n   useEffect(() => {\r\n      getPost(match.params.id);\r\n   }, [getPost]);\r\n\r\n   return loading || post === null ? (\r\n      <Spinner />\r\n   ) : (\r\n      <Fragment>\r\n         <Link to='/post' className='btn'>\r\n            Back To Posts\r\n         </Link>\r\n         <PostItem post={post} showActions={false} />\r\n         <CommentForm postId={post._id} />\r\n         <div className='comments'>\r\n            {post.comments.map((comment) => (\r\n               <CommentItem\r\n                  key={comment._id}\r\n                  comment={comment}\r\n                  postId={post._id}\r\n               />\r\n            ))}\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nPost.propTypes = {\r\n   getPost: PropTypes.func.isRequired,\r\n   post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n   post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n   REGISTER_SUCCESS,\r\n   REGISTER_FAIL,\r\n   USER_LOADED,\r\n   AUTH_ERROR,\r\n   LOGIN_FAIL,\r\n   LOGIN_SUCCESS,\r\n   LOGOUT,\r\n   ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nlet token = null;\r\n// if (typeof window != undefined) token = localStorage.getItem('token');\r\n\r\nconst initialState = {\r\n   token: token,\r\n   isAuthenticated: null,\r\n   loading: true,\r\n   user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n   const { type, payload } = action;\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            user: payload,\r\n         };\r\n      case REGISTER_SUCCESS:\r\n      case LOGIN_SUCCESS:\r\n         if (typeof window != undefined)\r\n            localStorage.setItem('token', payload.token);\r\n         return {\r\n            ...state,\r\n            ...payload,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n         };\r\n      case REGISTER_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n      case ACCOUNT_DELETED:\r\n         localStorage.removeItem('token');\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: false,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n          loading: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport EditProfile from './components/profile-form/EditProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\n\n//Redux\nimport store from './store';\n\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n// import './App.css';\n\n// if (typeof window != undefined && localStorage.token) {\n//    setAuthToken(localStorage.token);\n// }\n\nconst App = () => {\n   useEffect(() => {\n      store.dispatch(loadUser());\n   }, []);\n\n   return (\n      <React.Fragment>\n         <Navbar />\n         <Route exact path=\"/\" component={Landing} />\n         <section className=\"container\">\n            <Alert />\n            <Switch>\n               <Route exact path=\"/register\" component={Register} />\n               <Route exact path=\"/login\" component={Login} />\n               <Route exact path=\"/profiles\" component={Profiles} />\n               <Route exact path=\"/profile/:id\" component={Profile} />\n               <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n               <PrivateRoute\n                  export\n                  path=\"/create-profile\"\n                  component={CreateProfile}\n               />\n               <PrivateRoute\n                  export\n                  path=\"/edit-profile\"\n                  component={EditProfile}\n               />\n               <PrivateRoute\n                  export\n                  path=\"/add-experience\"\n                  component={AddExperience}\n               />\n               <PrivateRoute\n                  export\n                  path=\"/add-education\"\n                  component={AddEducation}\n               />\n               <PrivateRoute exact path=\"/posts\" component={Posts} />\n               <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n            </Switch>\n         </section>\n      </React.Fragment>\n   );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.hydrate(\n   <Provider store={store}>\n      <Router>\n         <App />\n      </Router>\n   </Provider>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}